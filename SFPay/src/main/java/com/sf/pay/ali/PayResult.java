package com.sf.pay.ali;import android.text.TextUtils;import java.text.SimpleDateFormat;import java.util.Date;import java.util.Locale;import java.util.Random;public class PayResult {    private static String notifyUrl;    private String resultStatus;    private String result;    private String memo;    public PayResult(String rawResult) {        if (TextUtils.isEmpty(rawResult))            return;        String[] resultParams = rawResult.split(";");        for (String resultParam: resultParams) {            if (resultParam.startsWith("resultStatus")) {                resultStatus = gatValue(resultParam, "resultStatus");            }            if (resultParam.startsWith("result")) {                result = gatValue(resultParam, "result");            }            if (resultParam.startsWith("memo")) {                memo = gatValue(resultParam, "memo");            }        }    }    @Override    public String toString() {        return "resultStatus={" + resultStatus + "};memo={" + memo + "};result={" + result + "}";    }    private String gatValue(String content, String key) {        String prefix = key + "={";        return content.substring(content.indexOf(prefix) + prefix.length(), content.lastIndexOf("}"));    }    /**     * @return the resultStatus     */    public String getResultStatus() {        return resultStatus;    }    /**     * @return the memo     */    public String getMemo() {        return memo;    }    /**     * @return the result     */    public String getResult() {        return result;    }    /**     * create the order info. 创建订单信息     */    public static String getOrderInfo(String subject, String body, String price) {        // 签约合作者身份ID        String orderInfo = "partner=" + "\"" + SignUtils.PARTNER + "\"";        // 签约卖家支付宝账号        orderInfo += "&seller_id=" + "\"" + SignUtils.SELLER + "\"";        // 商户网站唯一订单号        orderInfo += "&out_trade_no=" + "\"" + getOutTradeNo() + "\"";        // 商品名称        orderInfo += "&subject=" + "\"" + subject + "\"";        // 商品详情        orderInfo += "&body=" + "\"" + body + "\"";        // 商品金额        orderInfo += "&total_fee=" + "\"" + price + "\"";        // 服务器异步通知页面路径        orderInfo += "&notify_url=" + "\"" + "http://myantu.qiniudn.com" + notifyUrl + "\"";        // 服务接口名称， 固定值        orderInfo += "&service=\"mobile.securitypay.pay\"";        // 支付类型， 固定值        orderInfo += "&payment_type=\"1\"";        // 参数编码， 固定值        orderInfo += "&_input_charset=\"utf-8\"";        // 设置未付款交易的超时时间        // 默认30分钟，一旦超时，该笔交易就会自动被关闭。        // 取值范围：1m～15d。        // m-分钟，h-小时，d-天，1c-当天（无论交易何时创建，都在0点关闭）。        // 该参数数值不接受小数点，如1.5h，可转换为90m。        orderInfo += "&it_b_pay=\"30m\"";        // extern_token为经过快登授权获取到的alipay_open_id,带上此参数用户将使用授权的账户进行支付        // orderInfo += "&extern_token=" + "\"" + extern_token + "\"";        // 支付宝处理完请求后，当前页面跳转到商户指定页面的路径，可空        orderInfo += "&return_url=\"m.alipay.com\"";        // 调用银行卡支付，需配置此参数，参与签名， 固定值 （需要签约《无线银行卡快捷支付》才能使用）        // orderInfo += "&paymethod=\"expressGateway\"";        return orderInfo;    }    /**     * get the out_trade_no for an order. 生成商户订单号，该值在商户端应保持唯一（可自定义格式规范）     */    public static String getOutTradeNo() {        SimpleDateFormat format = new SimpleDateFormat("MMddHHmmss", Locale.getDefault());        Date date = new Date();        String key = format.format(date);        Random r = new Random();        key = key + r.nextInt();        key = key.substring(0, 15);        return key;    }    /**     * sign the order info. 对订单信息进行签名     *      * @param content     *            待签名订单信息     */    public static String sign(String content) {        return SignUtils.sign(content, SignUtils.RSA_PRIVATE);    }    /**     * get the sign type we use. 获取签名方式     */    public static String getSignType() {        return "sign_type=\"RSA\"";    }}
apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
def config = rootProject.android
android {

    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        multiDexEnabled true
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
        ndk {
            moduleName = 'bsdiff'
            abiFilters "armeabi", "armeabi-v7a"
        }
    }

    signingConfigs {
        release_debug {
            keyPassword "gorky1112"
            keyAlias "smartframe"
            storeFile file('./key/sfkey.jks')
            storePassword "gorky1112"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            ext.enableCrashlytics = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
        debug {
            ext.enableCrashlytics = false
        }

//        new_debug {
//            debuggable true
//            signingConfig signingConfigs.release_debug
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
//        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

greendao {
    schemaVersion 2
    daoPackage "com.sf.SFSample" // set package of generated classes
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    api project(':BaseSmartFrame')
    api project(':CustomView')
    api project(':Emoji')
    api project(':SFChat')
    api project(':SFPay')
    api project(':BaiduLib')

    //lifeCycle viewModel room
//    api 'android.arch.lifecycle:extensions:1.0.0@aar'
//    api 'android.arch.persistence.room:runtime:1.0.0@aar'
//    annotationProcessor 'android.arch.lifecycle:compiler:1.0.0@aar'
//    annotationProcessor 'android.arch.persistence.room:compiler:1.0.0@aar'
}